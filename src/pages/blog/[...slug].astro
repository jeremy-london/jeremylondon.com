---
import Authorcard from "@components/authorcard.astro";
import Container from "@components/container.astro";
import Label from "@components/ui/label.astro";
import { authors } from "@data/authors";
import { categories } from "@data/category";
import Layout from "@layouts/Layout.astro";
import { getFormattedDate } from "@utils/all";
import { CollectionEntry, getCollection } from "astro:content";

import type { Author } from "@data/authors";
import type { Category } from "@data/category";

type Props = CollectionEntry<"blog">;

export async function getStaticPaths() {
  const blog = await getCollection("blog");

  return blog.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

const { post } = Astro.props;

const { Content, remarkPluginFrontmatter } = await post.render();

const author = authors.find((item) => item.slug === post.data.author) as Author;
const category = categories.find(
  (item) => item.slug === post.data.category,
) as Category;

---

<Layout
  title={post.data.title}
  desc={post.data.excerpt}
  ogimage={post.data.image}
  load_pyodide={post.data.load_pyodide}>
  <Container>
    <div class="max-w-screen-xl mx-auto">
      <div class="text-center">
        <a href={`/category/${category.slug}`}>
          <Label theme={category.color}>{category.title}</Label>
        </a>
      </div>

      <h1
        class="mt-2 mb-3 text-3xl font-semibold tracking-tight text-center lg:leading-snug text-brand-primary lg:text-4xl dark:text-white">
        {post.data.title}
      </h1>

      <div class="flex justify-center mt-3 space-x-3 text-gray-500">
        <div class="flex items-center gap-3">
          <div class="relative flex-shrink-0 w-10 h-10">
            {
              author.image && (
                <img
                  src={author.image}
                  alt="Author Photo"
                  width={80}
                  height={80}
                  loading="eager"
                  class="rounded-full"
                />
              )
            }
          </div>

          <div>
            <a href={`/author/${author.slug}`}>
              <p class="text-gray-800 dark:text-gray-400">
                {author.name}
              </p>
            </a>
            <div class="flex items-center space-x-2 text-sm">
              <time
                class="text-gray-500 dark:text-gray-400"
                datetime={post.data.publishDate}>
                {getFormattedDate(post.data.publishDate)}
              </time>
              <span>
                · {Math.round(remarkPluginFrontmatter?.estReadingTime) || "5"} min
                read
              </span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </Container>

  <div
    class="flex items-center justify-center z-0 max-w-screen-xl mx-auto overflow-hidden lg:rounded-lg">
    {
      post.data.image && (
        <img
          src={post.data.image}
          width={600}
          height={600}
          alt="Thumbnail"
          loading="eager"
          class="object-cover w-auto h-[1000px]"
        />
      )
    }
  </div>

  <Container>
    <article class="max-w-screen-xl mx-auto w-full">
      <div
        class="contents mx-3 my-3 prose prose-base dark:prose-invert prose-a:text-blue-600">
        <Content />

        <div class="flex flex-wrap items-center w-full gap-3 md:w-auto">
          {
            post.data.tags.map((tag) => (
              <span class="text-sm text-gray-500">#{tag}</span>
            ))
          }
        </div>
      </div>

      <div class="flex justify-center mt-7 mb-7">
        <a
          href="/blog"
          class="px-5 py-3 text-sm text-blue-600 transition rounded-md dark:text-orange-500 bg-orange-50 hover:bg-blue-200 dark:hover:bg-orange-200">
          ← View all posts
        </a>
      </div>
      {author && <Authorcard author={author} />}
    </article>
  </Container>
</Layout>
